
import combBoxs.PatientCombo;
import dao.DbOperation;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import model.AdminUser;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author PC
 */
public class Consultation extends javax.swing.JFrame {

    private AdminUser adminUser = null;
    private Consultations con = null;
    private int index = 0;
    private int idPatient = -1;

    /**
     * Creates new form Consutation
     */
    public void getAllPatients() {
        try {
            ResultSet rs = GlobalVariables.patientDao.all();
            patientC.removeAllItems();
            patientC.insertItemAt(new PatientCombo(-1, ""), 0);
            while (rs.next()) {
                String fname = rs.getString("fname");
                String lname = rs.getString("lname");
                String name = lname + " " + fname;
                int idPatient = rs.getInt("id");
                PatientCombo pc = new PatientCombo(idPatient, name);
                patientC.addItem(pc);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public Consultation() {
        initComponents();
        this.getAllPatients();
        addConsultation.setEnabled(false);
        AutoCompleteDecorator.decorate(patientC);
    }

    public Consultation(Consultations con, int index) {
        initComponents();
        this.con = con;
        this.getAllPatients();
        this.index = index;
        patientC.setSelectedIndex(index);
        addConsultation.setEnabled(false);
        AutoCompleteDecorator.decorate(patientC);
    }

    public void validateData() {
        String diagnostique = diagnostiqueInput.getText();
        PatientCombo itemSelected = null;
        if (this.index != 0) {
            itemSelected = (PatientCombo) patientC.getItemAt(index);
        } else {
            itemSelected = (PatientCombo) patientC.getSelectedItem();
        }

        int idPatient = itemSelected.getIdPatient();
        this.idPatient = idPatient;
        if (idPatient != -1 && !diagnostique.equals("")) {
            addConsultation.setEnabled(true);
        } else {
            addConsultation.setEnabled(false);
        }
    }

    public void clearData() {
        diagnostiqueInput.setText("");
        patientC.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        diagnostiqueInput = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        addConsultation = new javax.swing.JButton();
        dateConsultation = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        addPatientBtn = new javax.swing.JButton();
        patientC = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        rdvMenu = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        diagnostiqueInput.setColumns(20);
        diagnostiqueInput.setRows(5);
        diagnostiqueInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diagnostiqueInputKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(diagnostiqueInput);

        jLabel2.setText("Diagnostique : ");

        addConsultation.setText("Add");
        addConsultation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConsultationActionPerformed(evt);
            }
        });

        dateConsultation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateConsultationKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dateConsultationKeyTyped(evt);
            }
        });

        jLabel3.setText(" Date : ");

        addPatientBtn.setText("Add patient");
        addPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientBtnActionPerformed(evt);
            }
        });

        patientC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                patientCItemStateChanged(evt);
            }
        });
        patientC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientCActionPerformed(evt);
            }
        });
        patientC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientCKeyReleased(evt);
            }
        });

        jMenu1.setText("Home");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        rdvMenu.setText("Rendez-vous");
        rdvMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdvMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(rdvMenu);

        jMenu3.setText("Patients");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });

        jMenu6.setText("Detail Patient");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenu3.add(jMenu6);

        jMenu4.setText("Consultations");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu3.add(jMenu4);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Logout");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addPatientBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addConsultation))
                    .addComponent(dateConsultation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(patientC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(patientC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateConsultation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addConsultation)
                    .addComponent(addPatientBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addConsultationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConsultationActionPerformed
        // TODO add your handling code here:
        model.Consultation consultation = new model.Consultation();
        consultation.setIdPatient(this.idPatient);
        consultation.setDate(GlobalVariables.dateFormat.format(dateConsultation.getDate()));
        consultation.setDiagnostique(diagnostiqueInput.getText());

        model.Model consultationModel = new model.Model();

        consultationModel = consultation;
        GlobalVariables.consultationDao.save(consultationModel);

        if (con != null) {
            con.getAllConsultations();
        }

        int result = JOptionPane.showConfirmDialog(null, // Parent component (null centers it)
                "voulez vous faire une ordenance", // Message to display
                "Ordenance", // Dialog title
                JOptionPane.YES_NO_OPTION); // Button options

        if (result == JOptionPane.YES_OPTION) {
            int idConsultation = DbOperation.getLastId("consultations");
            Ordonance ordonance = new Ordonance(idConsultation);
            ordonance.setDefaultCloseOperation(ordonance.DISPOSE_ON_CLOSE);
            ordonance.setVisible(true);

        }

    }//GEN-LAST:event_addConsultationActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        this.setVisible(false);
        new Home().setVisible(true);        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu1MouseClicked

    private void rdvMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdvMenuMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new RDV(adminUser).setVisible(true);
    }//GEN-LAST:event_rdvMenuMouseClicked

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_jMenu5MouseClicked

    private void addPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientBtnActionPerformed
        // TODO add your handling code here:
        Patients patientForm = new Patients(this);
        patientForm.setDefaultCloseOperation(patientForm.DISPOSE_ON_CLOSE);
        patientForm.setVisible(true);
    }//GEN-LAST:event_addPatientBtnActionPerformed

    private void patientCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientCKeyReleased
        // TODO add your handling code here:
        this.validateData();
    }//GEN-LAST:event_patientCKeyReleased

    private void diagnostiqueInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diagnostiqueInputKeyReleased
        // TODO add your handling code here:
        this.validateData();
    }//GEN-LAST:event_diagnostiqueInputKeyReleased

    private void dateConsultationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateConsultationKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dateConsultationKeyTyped

    private void dateConsultationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateConsultationKeyReleased
        // TODO add your handling code here:
        this.validateData();
    }//GEN-LAST:event_dateConsultationKeyReleased

    private void patientCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientCActionPerformed

    private void patientCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_patientCItemStateChanged
        // TODO add your handling code here:
        this.validateData();
    }//GEN-LAST:event_patientCItemStateChanged

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Patients().setVisible(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Patient().setVisible(true);
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consultation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consultation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consultation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consultation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consultation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConsultation;
    private javax.swing.JButton addPatientBtn;
    private com.toedter.calendar.JDateChooser dateConsultation;
    private javax.swing.JTextArea diagnostiqueInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<PatientCombo> patientC;
    private javax.swing.JMenu rdvMenu;
    // End of variables declaration//GEN-END:variables
}
